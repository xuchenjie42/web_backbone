'use strict';

var _ = require('underscore-plus');
var stylus = require('gulp-stylus');
var nib = require('nib');
var sourcemaps = require('gulp-sourcemaps');
var pleeease = require('gulp-pleeease');

module.exports = require('../task').extend({
  name: 'style',
  stylus: {
    use: [nib()]
  },
  sourcemaps: function(stream) {
    if(!this.stylus.sourcemap ||
      this.stylus.sourcemap.inline === false) {
      return stream;
    }
    
    return stream
      .pipe(sourcemaps.init({
        loadMaps: true
      }))
      .pipe(pleeease({
        minifier: false,
        sourcemaps: true
      }))
      .pipe(sourcemaps.write('./', {
        includeContent: false,
        sourceRoot: '.'
      }));
  },
  compile: function(stream) {
    if(this.stylus.sourcemap &&
      this.stylus.sourcemap.inline) {
      _.extend(this.stylus.sourcemap, {
        sourceRoot: '.',
        basePath: this.dst
      });
    }

    stream = stream.pipe(stylus(this.stylus));
    stream = this.sourcemaps(stream);
    
    return stream;
  },
  execute: function() {
    this.compile(this.gulp.src(this.root))
      .pipe(this.gulp.dest(this.dst));
  },
  watch: function() {
    var root = this.root;
    var dst = this.dst;

    this.gulp.src(root)
      .pipe(this.plugins.watch(this.src, function ( /*files*/ ) {
        var stream = this.gulp.src(root)
          .pipe(this.plugins.plumber());

          this.compile(stream)
            .pipe(this.gulp.dest(dst));

        this.plugins.util.log('compiled ' + root + ' to ' + dst);
      }.bind(this)));
  }
}, { export: 'Style', config: ['root', 'stylus'] });