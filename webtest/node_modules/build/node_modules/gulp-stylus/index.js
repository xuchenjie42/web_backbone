'use strict';

var through = require('through2');
var stylus  = require('stylus');
var gutil   = require('gulp-util');
var rext    = require('replace-ext');
var path    = require('path');
var _       = require('lodash');

var PLUGIN_NAME = 'gulp-stylus';

var find = stylus.utils.find;

module.exports = function (options) {
  var opts = _.cloneDeep(options) || {};

  _.defaults(opts, {
    paths: []
  });
  
  var alias = options.alias || {};
  
  stylus.utils.find = function(path, paths, ignore) {
    for(var key in alias) {
      var regex = new RegExp('^' + key + '\/');
      
      if(regex.exec(path)) {
        path = path.replace(regex, process.cwd() + '/' + alias[key] + '/');
      }
    }
    
    return find.call(stylus.utils, path, paths, ignore);
  };

  return through.obj(function (file, enc, cb) {

    if(file.isStream()) {
      return cb(new gutil.PluginError(PLUGIN_NAME, 'Streaming not supported'));
    }
    if(file.isNull()){
      return cb(null, file);
    }
    if(path.extname(file.path) === '.css'){
      return cb(null, file);
    }
    
    opts.filename = file.path;
    opts.paths.push(path.dirname(file.path));

    stylus.render(file.contents.toString('utf8'), opts, function(err, css) {
      if(err) {
        cb(new gutil.PluginError(PLUGIN_NAME, err));
        return;
      }
      
      if(!css) { cb(null, null); return; }
    
      if(css !== undefined){
        file.path = rext(file.path, '.css');
        file.contents = new Buffer(css);
        cb(null, file);
      }
    });
  });

};