'use strict';

var _ = require('underscore-plus');
var fs = require('fs');
var path = require('path');
var stylus = require('stylus');

exports = module.exports = plugin;
exports.version = require(path.join(__dirname, '../package.json')).version;
exports.path = __dirname;

function plugin(options) {
  var Plugin = {
    dimens: function() {
      return this.load('dimens.json');
    },
    metrics: function() {
      return this.load('metrics.json');
    },
    load: function(file) {
      var obj = {};
  
      if(options && options.path) {    
        for(var i = options.path.length; i >= 0; --i) {
          var p = options.path[i] + '/res/values/' + file;
      
          if(fs.existsSync(p)) {
            try {
              obj = _.merge(obj, JSON.parse(fs.readFileSync(p)));
            } catch(e) {
              console.log(e);
            }
          }
        }
      }
    
      return obj;
    },
    clone: function(o) {
      var cloned = new stylus.nodes.Object();
    
      for(var key in o) {
        var value = o[key];
      
        if(typeof value === 'object') {
          value = this.clone(value);
        } else if(typeof value === 'number') {
          value = new stylus.nodes.Unit(value);
        }
      
        cloned.set(key, value);
      }
    
      return cloned;
    }
  };
  
  return function(style) {
    var _metrics = Plugin.metrics();
    
    var metrics = Plugin.clone(_metrics);
    metrics.set('scale', new stylus.nodes.Unit(_metrics.display.width / 1920));
    
    style.define('metrics', metrics);
    style.define('dimens', Plugin.clone(Plugin.dimens()));
    style.include(__dirname);
  };
};